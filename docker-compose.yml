version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: healio_ai_mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_HOST_PORT:-27017}:27017"
    volumes:
      - healio_ai_mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-healio_db}
    networks:
      - healio_ai_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${TARGET_NODE_ENV:-development}
    container_name: healio_ai_app
    restart: unless-stopped
    ports:
      - "${APP_HOST_PORT:-3010}:${APP_CONTAINER_PORT:-3000}"
    volumes:
      - ./.env:/app/.env
      - ./src:/app/src
      - ./public:/app/public
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/${MONGO_INITDB_DATABASE:-healio_db}
      - NODE_ENV=${TARGET_NODE_ENV:-development}
      - JWT_SECRET=${JWT_SECRET_FOR_COMPOSE}
      - GEMINI_API_KEY=${GEMINI_API_KEY_FOR_COMPOSE}
      - MIDTRANS_CLIENT_KEY_SANDBOX=${MIDTRANS_CLIENT_KEY_SANDBOX}
      - MIDTRANS_SERVER_KEY_SANDBOX=${MIDTRANS_SERVER_KEY_SANDBOX}
      - NEXT_PUBLIC_MIDTRANS_CLIENT_KEY_SANDBOX=${MIDTRANS_CLIENT_KEY_SANDBOX}
    depends_on:
      - mongodb
    networks:
      - healio_ai_network

  cron-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: healio_ai_cron_worker
    restart: unless-stopped
    volumes:
      - ./.env:/app/.env
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/${MONGO_INITDB_DATABASE:-healio_db}
      - NODE_ENV=${TARGET_NODE_ENV:-development}
      - GEMINI_API_KEY=${GEMINI_API_KEY_FOR_COMPOSE}
      - MIDTRANS_CLIENT_KEY_SANDBOX=${MIDTRANS_CLIENT_KEY_SANDBOX}
      - MIDTRANS_SERVER_KEY_SANDBOX=${MIDTRANS_SERVER_KEY_SANDBOX}
    depends_on:
      - mongodb
    networks:
      - healio_ai_network
    command: npm run start:cron

volumes:
  healio_ai_mongodb_data:
    name: healio_ai_mongodb_data

networks:
  healio_ai_network:
    driver: bridge
